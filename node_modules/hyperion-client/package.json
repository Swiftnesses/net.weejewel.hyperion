{
  "name": "hyperion-client",
  "version": "1.0.3",
  "description": "Hyperion Client for AmbiLight-clone Hyperion, using JSON websocket",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/WeeJeWel/node-hyperion-client.git"
  },
  "keywords": [
    "hyperion",
    "client",
    "json",
    "socket",
    "ambilight"
  ],
  "author": {
    "name": "Emile Nijssen"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/WeeJeWel/node-hyperion-client/issues"
  },
  "homepage": "https://github.com/WeeJeWel/node-hyperion-client#readme",
  "readme": "# hyperion-client\n\nThis is a library to connect to a [Hyperion](https://github.com/tvdzwan/hyperion) server and control it in a Node.js application.\n\n## Usage\n### Install\n`npm install hyperion-client`\n\n### Example\n\n```javascript\n\"use strict\";\n\nvar Hyperion = require('hyperion-client');\n\nvar hyperion = new Hyperion( process.argv[2] || 'emile-pi.local', process.argv[3] || 19444 );\n\thyperion.on('connect', function(){\n\t\tconsole.log('connected');\n\t\t\n\t\thyperion.setEffect('Knight rider', {}, function( err, result ){\n\t\t\tconsole.log('err', err, 'result', result)\n\t\t})\n\t\t\n\t})\n\thyperion.on('error', function(error){\n\t\tconsole.error('error:', error)\n\t})\n```\n\n## Reference Guide\n### Methods\n#### Hyperion ( address, port )\n\n```javascript\nvar hyperion = new Hyperion( '192.168.0.123', 19444 );\n\thyperion.on('connect', function(){\n\t\t// your magic here\n\t});\n\thyperion.on('error', function(err){\n\t\tconsole.error('oops...', err);\n\t});\n```\n\n#### .setColor ( color, callback )\n\nSet a single color\n\n___color___ _(Array)_\n\nAn array of three Red, Green and Blue numbers between 0-255.\n\n___callback___ _(Function)_\n\nCalled when the color is set.\n\n```javascript\nhyperion.setColor([ 255, 0, 0 ], function( err, result ){\n\tconsole.log(i, 'err', err, 'result', result)\n})\n```\n\n#### .setEffect ( effect, args, callback )\n\nPlay an effect (animation)\n\n___effect___ _(String)_\n\nName of the effect.\n\n___args___ _(Object)_\n\nOptional effect args.\n\n___callback___ _(Function)_\n\nCalled when the effect is set.\n\n```javascript\nhyperion.setEffect('Knight rider', {}, function( err, result ){\n\tconsole.log('err', err, 'result', result)\n})\n```\n\n#### .clear ( callback )\n\nClear the color or effect, and revert to default mode (usually capture)\n\n___callback___ _(Function)_\n\nCalled when the effect is set.\n\n#### .getServerinfo ( callback )\n\nGet server information, like a list of effects\n\n___callback___ _(Function)_\n\nCalled when the effect is set.\n\n\n### Events\n#### .on('connect', callback)\n#### .on('error', callback)\n\n## License (MIT)\nCopyright (c) 2015 Emile Nijssen\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "gitHead": "ed777c05c9ef6f1deea70524927f1cc0003aa0d1",
  "_id": "hyperion-client@1.0.3",
  "_shasum": "f300893b23edcbbd30c5a4f48d4fb763ad757c93",
  "_from": "hyperion-client@>=1.0.2 <2.0.0"
}
